version: "3.8"
services:

  cloudflared:
    container_name: cloudflared
#    env_file: cloudflare_configs/cloudflare.env if the tunnel was setup via the UI
    build:
      context: .
      dockerfile: Cloudflared.dockerfile
    networks:
      - nextcloud_network
      - steelbooksatbestbuy_network
      - cineplex_network
      - jenkins_network
      - finance_site_network

  nextcloud_postgres:
      image: postgres:alpine
      env_file:
          - nextcloud.env
      restart: unless-stopped
      volumes:
          - nextcloud_postgres_db:/var/lib/postgresql/data
      container_name: nextcloud_postgres
      networks:
          - nextcloud_network

  nextcloud_app:
      image: nextcloud:apache
      env_file:
          - nextcloud.env
      restart: unless-stopped
      volumes:
          - nextcloud:/var/www/html
      environment:
          - POSTGRES_HOST=nextcloud_postgres
      depends_on:
          - nextcloud_postgres
      networks:
          - nextcloud_network
      ports:
          - 8888:80 #so the instance can be accessed without the use of cloudflare tunnel in the LAN
      container_name: nextcloud_app

  jenkins:
    build:
      context: .
      dockerfile: Jenkins.Dockerfile
    networks:
      - jenkins_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/bin/docker
      - /usr/local/bin/docker-compose:/bin/docker-compose
    container_name: jenkins

volumes:
    nextcloud:
        name: nextcloud_volume
    nextcloud_postgres_db:
        name: nextcloud_postgres_db

networks:
  nextcloud_network:
    name: nextcloud_network
    driver: bridge
  steelbooksatbestbuy_network:
    name: steelbooksatbestbuy_network
    driver: bridge
  cineplex_network:
    name: cineplex_network
    driver: bridge
  jenkins_network:
    name: jenkins_network
    driver: bridge
  finance_site_network:
    name: finance_site_network
    driver: bridge
