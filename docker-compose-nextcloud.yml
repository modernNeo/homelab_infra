services:
  nextcloud_postgres:
    image: postgres:alpine
    env_file:
        - nextcloud.env
    deploy: # https://github.com/compose-spec/compose-spec/blob/main/deploy.md#restart_policy
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    volumes:
        - /home/jace/nas_mount/docker_data/nextcloud/postgres_data:/var/lib/postgresql/data
    container_name: nextcloud_postgres
    networks:
        - nextcloud_network
    logging: # adapted from https://www.howtogeek.com/devops/how-to-clear-logs-of-running-docker-containers/#setting-up-log-rotation
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  nextcloud_redis:
    image: redis
    restart: unless-stopped
    container_name: nextcloud_redis
    networks:
      - nextcloud_network
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  nextcloud_app:
    image: nextcloud:29.0.0-apache
    env_file:
        - nextcloud.env
    deploy: # https://github.com/compose-spec/compose-spec/blob/main/deploy.md#restart_policy
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    volumes:
        - /home/jace/nas_mount/docker_data/nextcloud/data:/var/www/html
  #      depends_on:
  #          - nextcloud_postgres
    networks:
        - nextcloud_network
    ports:
        - 8888:80 #so the instance can be accessed without the use of cloudflare tunnel in the LAN
    container_name: nextcloud_app
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

networks:
  nextcloud_network:
    name: nextcloud_network
    driver: bridge
